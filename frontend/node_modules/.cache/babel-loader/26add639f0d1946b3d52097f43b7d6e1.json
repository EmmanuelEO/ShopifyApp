{"ast":null,"code":"import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, SET_CURRENT, CLEAR_CURRENT, UPDATE_ITEM, FILTER_ITEMS, CLEAR_FILTER, ITEM_ERROR, CLEAR_ITEMS } from \"../types\";\n\nconst itemReducer = (state, action) => {\n  switch (action.type) {\n    case GET_ITEMS:\n      return { ...state,\n        items: action.payload,\n        loading: false\n      };\n\n    case ADD_ITEM:\n      console.log(items);\n      return { ...state,\n        items: [action.payload, ...state.items],\n        loading: false\n      };\n\n    case UPDATE_ITEM:\n      return { ...state,\n        items: state.items.map(item => item._id === action.payload._id ? action.payload : item),\n        loading: false\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        items: state.items.filter(item => item._id !== action.payload),\n        loading: false\n      };\n\n    case CLEAR_ITEMS:\n      return { ...state,\n        items: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_ITEMS:\n      return { ...state,\n        filtered: state.items.filter(item => {\n          // Here the parameter 'gi' means 'Global and Insensitive'\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return item.name.match(regex) || item.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case ITEM_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default itemReducer;","map":{"version":3,"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","SET_CURRENT","CLEAR_CURRENT","UPDATE_ITEM","FILTER_ITEMS","CLEAR_FILTER","ITEM_ERROR","CLEAR_ITEMS","itemReducer","state","action","type","items","payload","loading","console","log","map","item","_id","filter","filtered","error","current","regex","RegExp","name","match","email"],"sources":["/Users/emmanuelokonkwo/Desktop/shopify/frontend/src/context/item/itemReducer.js"],"sourcesContent":["import {\n    GET_ITEMS,\n    ADD_ITEM,\n    DELETE_ITEM,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_ITEM,\n    FILTER_ITEMS,\n    CLEAR_FILTER,\n    ITEM_ERROR,\n    CLEAR_ITEMS,\n} from \"../types\";\n  \nconst itemReducer = (state, action) => {\n    switch (action.type) {\n        case GET_ITEMS:\n        return {\n            ...state,\n            items: action.payload,\n            loading: false,\n        };\n        case ADD_ITEM:\n            console.log(items);\n            return {\n                ...state,\n                items: [action.payload, ...state.items],\n                loading: false,\n            };\n        case UPDATE_ITEM:\n        return {\n            ...state,\n            items: state.items.map((item) =>\n            item._id === action.payload._id ? action.payload : item\n            ),\n            loading: false\n        };\n        case DELETE_ITEM:\n        return {\n            ...state,\n            items: state.items.filter(\n            (item) => item._id !== action.payload\n            ),\n            loading: false\n        };\n        case CLEAR_ITEMS:\n            return {\n                ...state, \n                items: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        case SET_CURRENT:\n        return {\n            ...state,\n            current: action.payload,\n        };\n        case CLEAR_CURRENT:\n        return {\n            ...state,\n            current: null,\n        };\n        case FILTER_ITEMS:\n        return {\n            ...state,\n            filtered: state.items.filter((item) => {\n            // Here the parameter 'gi' means 'Global and Insensitive'\n            const regex = new RegExp(`${action.payload}`, \"gi\");\n            return item.name.match(regex) || item.email.match(regex);\n            }),\n        };\n        case CLEAR_FILTER:\n        return {\n            ...state,\n            filtered: null,\n        };\n        case ITEM_ERROR:\n        return {\n            ...state,\n            error: action.payload,\n        };\n        default:\n        return state;\n    }\n};\n\nexport default itemReducer;"],"mappings":"AAAA,SACIA,SADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,WANJ,EAOIC,YAPJ,EAQIC,YARJ,EASIC,UATJ,EAUIC,WAVJ,QAWO,UAXP;;AAaA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKb,SAAL;MACA,OAAO,EACH,GAAGW,KADA;QAEHG,KAAK,EAAEF,MAAM,CAACG,OAFX;QAGHC,OAAO,EAAE;MAHN,CAAP;;IAKA,KAAKf,QAAL;MACIgB,OAAO,CAACC,GAAR,CAAYJ,KAAZ;MACA,OAAO,EACH,GAAGH,KADA;QAEHG,KAAK,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,KAA1B,CAFJ;QAGHE,OAAO,EAAE;MAHN,CAAP;;IAKJ,KAAKX,WAAL;MACA,OAAO,EACH,GAAGM,KADA;QAEHG,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYK,GAAZ,CAAiBC,IAAD,IACvBA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GAA5B,GAAkCT,MAAM,CAACG,OAAzC,GAAmDK,IAD5C,CAFJ;QAKHJ,OAAO,EAAE;MALN,CAAP;;IAOA,KAAKd,WAAL;MACA,OAAO,EACH,GAAGS,KADA;QAEHG,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYQ,MAAZ,CACNF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OADvB,CAFJ;QAKHC,OAAO,EAAE;MALN,CAAP;;IAOA,KAAKP,WAAL;MACI,OAAO,EACH,GAAGE,KADA;QAEHG,KAAK,EAAE,IAFJ;QAGHS,QAAQ,EAAE,IAHP;QAIHC,KAAK,EAAE,IAJJ;QAKHC,OAAO,EAAE;MALN,CAAP;;IAOJ,KAAKtB,WAAL;MACA,OAAO,EACH,GAAGQ,KADA;QAEHc,OAAO,EAAEb,MAAM,CAACG;MAFb,CAAP;;IAIA,KAAKX,aAAL;MACA,OAAO,EACH,GAAGO,KADA;QAEHc,OAAO,EAAE;MAFN,CAAP;;IAIA,KAAKnB,YAAL;MACA,OAAO,EACH,GAAGK,KADA;QAEHY,QAAQ,EAAEZ,KAAK,CAACG,KAAN,CAAYQ,MAAZ,CAAoBF,IAAD,IAAU;UACvC;UACA,MAAMM,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEf,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;UACA,OAAOK,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBH,KAAhB,KAA0BN,IAAI,CAACU,KAAL,CAAWD,KAAX,CAAiBH,KAAjB,CAAjC;QACC,CAJS;MAFP,CAAP;;IAQA,KAAKnB,YAAL;MACA,OAAO,EACH,GAAGI,KADA;QAEHY,QAAQ,EAAE;MAFP,CAAP;;IAIA,KAAKf,UAAL;MACA,OAAO,EACH,GAAGG,KADA;QAEHa,KAAK,EAAEZ,MAAM,CAACG;MAFX,CAAP;;IAIA;MACA,OAAOJ,KAAP;EApEJ;AAsEH,CAvED;;AAyEA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}